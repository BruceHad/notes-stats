setwd("~/Dropbox/Learning/DataSci-coursera/5reproresearch/assign1/RepData_PeerAssessment1")
data_file <- "activity.zip"
unz(data_file, activity_file)
unz(data_file, "activity.csv")
activity <- read.csv("activity.csv", colClasses = c("date" = "Date"))
activity <- read.csv(unz(data_file, "activity.csv"), colClasses = c("date" = "Date"))
data_file <- "activity.zip"
activity <- read.csv(unz(data_file, "activity.csv"), colClasses = c("date" = "Date"))
data_file <- "activity.zip"
activity <- read.csv(unz(data_file, "activity.csv"), colClasses = c("date" = "Date"))
unlink(data_file)
steps_per_day <- aggregate(steps ~ date, data = activity, FUN = sum, na.rm = TRUE)
hist(steps_per_day$steps, main ="Histogram of Steps per Day", xlab = "Steps per Day")
mn <- as.character(round(mean(steps_per_day$steps),2))
mdn <- as.character(round(median(steps_per_day$steps),2))
avg_per_interval <- aggregate(steps ~ interval, data = activity, FUN = mean, na.rm = TRUE)
plot(avg_per_interval$steps, type="l", xlab="Interval", ylab="Average No. of Steps")
max <- as.character(which.max(avg_per_interval$steps))
hour = as.character(round(as.integer(max)/12,2))
na_row_count = as.character(nrow(activity[which(is.na(activity$steps)),]))
# Take a copy of activity data frame
filled_activity = activity
# Fill in NA values of data frame with averages for that interval.
for(i in 1:nrow(filled_activity)){
if(is.na(filled_activity[i,1])){
interval = filled_activity[i, 3]
average_for_interval = avg_per_interval$steps[match(interval, avg_per_interval$interval)]
filled_activity[i,1] <- average_for_interval
}
}
# Recalculate Steps Per Day
steps_per_day <- aggregate(steps ~ date, data = activity, FUN = sum, na.rm = TRUE)
hist(steps_per_day$steps, main ="Histogram of Steps per Day", xlab = "Steps per Day")
mn2 <- as.character(round(mean(steps_per_day$steps),2))
mdn2 <- as.character(round(median(steps_per_day$steps),2))
reate new 'week' vector
weekend = c()
for(i in 1:nrow(filled_activity)){
if(weekdays(filled_activity[i,2]) %in% c("Saturday", "Sunday")){
weekend[i] <- "weekend"
} else{
weekend[i] <- "weekday"
}
}
# Add 'week' vector to activity data frame as a factor
filled_activity$week <- as.factor(weekend)
avg_per_interval_week = aggregate(steps ~ interval + week, data = filled_activity, FUN = mean)
head(avg_per_interval_week)
# Create Panel Plot with Lattice
library(lattice)
xyp
xyplot(steps ~ interval | week, data = avg_per_interval_week, type = "l",  layout = c(1,2))
library(knitr)
knit2html(PA1_template.Rmd)
knit2html("PA1_template.Rmd")
data_file <- "activity.zip"
activity <- read.csv(unz(data_file, "activity.csv"), colClasses = c("date" = "Date"))
data_file <- "activity.zip"
activity <- read.csv(unz(data_file, "activity.csv"), colClasses = c("date" = "Date"))
data_file <- "activity.zip"
activity <- read.csv(unz(data_file, "activity.csv"), colClasses = c("date" = "Date"))
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
